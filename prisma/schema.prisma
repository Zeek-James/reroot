generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Harvest {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  field     String
  quantity  Int
  workerId  String
  createdAt DateTime @default(now())
  worker    Worker   @relation(fields: [workerId], references: [id])
}


model Worker {
  id        String    @id @default(cuid())
  name      String
  role      String    // Role here could be 'admin', 'supervisor', 'worker'
  createdAt DateTime  @default(now())
  harvests  Harvest[]
 userId    Int?     @unique // Foreign key to the User model, matching the type of User.id
  user      User?    @relation(fields: [userId], references: [id], name: "UserToWorker") // One-to-one relation
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String   // Used for authentication, hashed in the database
  role      String   // 'admin', 'supervisor', 'worker', etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
   worker    Worker?  @relation(name: "UserToWorker") // Reverse relation, no need to specify fields and references here
}